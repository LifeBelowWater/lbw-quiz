{"version":3,"sources":["assets/styles/Styles.js","components/RootNavigation.js","functions/_getTdData.js","components/LandingPage.js","components/QuestionOption.js","components/Timer.js","functions/_score.js","components/QuizPage.js","functions/_sendTdData.js","components/InfoPage.js","components/TextPage.js","components/ScorePage.js","App.js","assets/fonts/Roboto/Roboto-Regular.ttf","assets/fonts/Zen_Loop/ZenLoop-Regular.ttf"],"names":["styles","StyleSheet","create","containerBackground","flex","backgroundColor","alignItems","justifyContent","alignContent","container","maxWidth","titleText","fontFamily","fontSize","color","marginLeft","text","margin","marginRight","textAlign","button","marginBottom","width","borderRadius","buttonText","modal","modalText","fontWeight","buttonBeenden","marginTop","navigationRef","createNavigationContainerRef","push","isReady","dispatch","StackActions","getTdData","selectedAnswer","a","async","fetch","response","ok","Error","status","json","data","phase","RootNavigation","index","question","timerCount","ms_to_phase_end","initialBtnState","initialActiveState","answer","console","error","LandingPage","navigation","useFonts","Roboto","require","ZenLoop","View","style","Text","textCenter","TouchableOpacity","onPress","navigate","QuestionOption","props","number","disabled","selected","answers","btnNum","answerText","value","toUpperCase","Timer","timeToEnd","React","timeLeft","Math","floor","count","setCount","interrupt","interval","setInterval","clearInterval","millis","minutes","seconds","toFixed","millisToMinutesAndSeconds","initialScore","playedQuestions","setScore","score","evalAnswer","QuizPage","route","params","buttonAEnabled","setButtonAEnabled","buttonBEnabled","setButtonBEnabled","buttonCEnabled","setButtonCEnabled","buttonDEnabled","setButtonDEnabled","buttonAActive","setButtonAActive","buttonBActive","setButtonBActive","buttonCActive","setButtonCActive","buttonDActive","setButtonDActive","answerSelectet","setAnswerSelected","timerInterrupt","setTimerInterrupt","answerButtons","myArray","Object","entries","Questions","Fragen","Antworten","key","pushToArray","qPhase","qIndex","Frage","map","item","itemIndex","questionIndex","isActive","String","method","then","catch","InfoPage","rightAnswer","Antworttext","Richtige_antwort","TextPage","state","modalVisible","modal1Visible","modal2Visible","modal3Visible","modal4Visible","visible","this","setState","TouchableHighlight","toggleModal","numberOfLines","Zusatztext","Modal","animationType","transparent","propagateSwipe","onRequestClose","log","ScrollView","toggle1Modal","toggle2Modal","toggle3Modal","toggle4Modal","Component","ScorePage","textContainer","ScoreHandler","Stack","createNativeStackNavigator","App","NavigationContainer","ref","Navigator","screenOptions","headerShadowVisible","headerBackTitleVisible","Screen","name","component","options","headerShown","initialParams","headerStyle","headerTintColor","module","exports"],"mappings":"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","file":"static/js/app.ac733f77.chunk.js","sourcesContent":["import { StyleSheet } from \"react-native\";\n\nconst styles = StyleSheet.create({\n    containerBackground: {\n        flex: 1,\n        backgroundColor: '#F2F2F2',\n        alignItems: 'center',\n        justifyContent: 'center',\n        alignContent: 'center'\n      },\n      container: {\n        maxWidth: 768,\n        flex: 1,\n        justifyContent: 'center',\n        alignContent: 'center',\n        alignItems: 'center'\n      },\n      titleText: {\n        fontFamily: 'ZenLoop',\n        fontSize: 60,\n        color: '#00517A',\n        marginLeft: 30, \n      },\n      text: {\n        fontFamily: 'Roboto',\n        fontSize: 20,\n        color: '#00517A',\n        margin: 20,\n        marginLeft: 30, \n        marginRight: 30,\n        textAlign: 'left'\n      },\n      button: {\n        backgroundColor: '#00517A',\n        marginBottom: 20,\n        marginLeft: 20, \n        marginRight: 20,\n        width: 300,\n        borderRadius: 10,\n      },\n      buttonText: {\n        fontFamily: 'Roboto',\n        fontSize: 20,\n        color: '#f2f2f2',\n        margin: 20,\n        textAlign: 'center'\n      },\n      modal: {\n        maxWidth: 768,\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        alignContent: 'center'\n      },\n      modalText: {\n        fontFamily: 'Roboto',\n        fontSize: 20,\n        fontWeight: 800,\n        color: '#00517A',\n        margin: 20,\n        textAlign: 'center'\n      },\n      buttonBeenden: {\n        backgroundColor: '#7F7F7F',\n        marginTop: 40,\n        marginBottom: 20,\n        marginLeft: 20, \n        marginRight: 20,\n        width: 300,\n        borderRadius: 10,\n      },\n})\n\nexport default styles;","import { createNavigationContainerRef } from '@react-navigation/native';\nimport { StackActions } from '@react-navigation/native';\n\nexport const navigationRef = createNavigationContainerRef()\n\nexport function navigate(name, params) {\n  if (navigationRef.isReady()) {\n    navigationRef.navigate(name, params);\n  }\n}\n\nexport function push(...args) {\n  if (navigationRef.isReady()) {\n    navigationRef.dispatch(StackActions.push(...args));\n  }\n}","import * as RootNavigation from '../components/RootNavigation';\n\nexport default async function getTdData(selectedAnswer) {\n    try {\n      const response = await fetch('https://d7a0-141-22-50-46.eu.ngrok.io/api/v1.0/question_and_phase');\n      if (!response.ok) {\n        throw new Error(`HTTP error: ${response.status}`);\n      }\n      \n      const data = await response.json();\n\n      if (data.phase == 1) {\n        RootNavigation.push('Quiz', {\n          index: data.question-1,\n          timerCount: data.ms_to_phase_end,\n          initialBtnState: false,\n          phase: data.phase,\n          initialActiveState: true\n        });\n      } else if (data.phase == 2) {\n        RootNavigation.push('Infos', {\n          index: data.question-1,\n          answer: selectedAnswer,\n          timerCount: data.ms_to_phase_end,\n          phase: data.phase\n        });\n      }\n    }\n    catch(error) {\n      console.error(`Could not get Data: ${error}`);\n    }\n};    ","import * as React from \"react\";\nimport { Text, View, TouchableOpacity } from \"react-native\";\nimport { useFonts } from \"expo-font\";\nimport styles from \"../assets/styles/Styles\";\nimport getTdData from \"../functions/_getTdData\";\n\nexport default function LandingPage({ navigation }) {\n    \n    const [loaded] = useFonts({\n        Roboto: require('../assets/fonts/Roboto/Roboto-Regular.ttf'),\n        ZenLoop: require('../assets/fonts/Zen_Loop/ZenLoop-Regular.ttf'),\n    });\n      \n    if (!loaded) {\n      return null;\n    }\n\n    return (\n      <View style={styles.containerBackground}>\n        <View style={styles.container}>\n          <Text style={styles.titleText}>Life Below Water</Text>\n          <Text style={[styles.text, styles.textCenter]}>Herzlich Willkommen bei unserem Quiz. Hier kannst du dein Wissen rund um das Thema Ozeane testen und spannende Fakten erfahren.</Text>\n          <TouchableOpacity style={styles.button} onPress={() => getTdData()}>\n            <Text style={styles.buttonText}>Quiz starten!</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Weiterführende Informationen')}>\n            <Text style={styles.buttonText}>Mehr Infos?</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n}","import * as React from \"react\";\nimport { StyleSheet, Text, TouchableOpacity } from \"react-native\";\nimport { useFonts } from \"expo-font\";\n\nexport default function QuestionOption (props) {\n    const [loaded] = useFonts({\n      Roboto: require('../assets/fonts/Roboto/Roboto-Regular.ttf'),\n      ZenLoop: require('../assets/fonts/Zen_Loop/ZenLoop-Regular.ttf'),\n    });\n      \n    if (!loaded) {\n      return null;\n    }\n\n  const addBtnStyle = (number) => {\n    if (props.selected == true) {\n      //graublau\n      return { backgroundColor: '#DAE3F3' }\n    }\n    else {\n      if (number == 0) {\n        return {\n          //grün\n          backgroundColor: '#226822'\n        }\n      }\n      else if (number == 1) {\n        return {\n          //rot\n          backgroundColor: '#B00000'\n        }\n      }\n      else if (number == 2) {\n        return {\n          //blau\n          backgroundColor: '#00517A'\n        }\n      }\n      else {\n        return {\n          //gelb\n          backgroundColor: '#E6AF00'\n        }\n      }\n    }\n  }\n\n  return (\n    <TouchableOpacity disabled={props.selected} style={[styles.answers, addBtnStyle(props.btnNum)]} onPress={props.onPress}>\n      <Text style={styles.answerText}>{props.value.toUpperCase()}</Text>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  answers: {\n    fontFamily: 'Roboto',\n    fontSize: 20,\n    textAlign: 'center',\n    marginBottom: 20,\n    marginLeft: 20,\n    marginRight: 20,\n    width: 300,\n    borderRadius: 10,\n  },\n  answerText: {\n    color: '#ece6dd',\n    fontFamily: 'Roboto',\n    fontSize: 24,\n    textAlign: 'center',\n    margin: 20\n  }\n});","import * as React from \"react\";\nimport { Text } from \"react-native\";\nimport styles from \"../assets/styles/Styles\";\nimport getTdData from \"../functions/_getTdData\";\nimport * as RootNavigation from \"./RootNavigation\";\n\nexport default function Timer ( props ) {\n    const millisToMinutesAndSeconds = (millis) => {\n        let minutes = Math.floor(millis / 60000);\n        let seconds = ((millis % 60000) / 1000).toFixed(0);\n        return (\n            seconds == 60 ?\n            (minutes+1) + \":00\" :\n            minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds\n        );\n      }\n\n    const calculateTimeLeft = (timeToEnd) => {\n        let difference = Math.floor((timeToEnd + 1000)/1000)*1000;\n        \n        return difference;\n    };\n\n    const [count, setCount] = React.useState(calculateTimeLeft(props.timeLeft));\n\n    React.useEffect(() => {\n        if (!count) {\n            /*if (props.qPhase == 2 && props.qIndex == 5) {\n                RootNavigation.navigate('Score');\n                return;\n            } else*/ if (props.interrupt == true) {\n                return;\n            } else {\n                getTdData(props.selectedAnswer);\n                return;\n            }\n        }\n        const interval = setInterval(() => {\n            setCount(count - 1000);\n        }, 1000);\n\n        return () => clearInterval(interval);\n    }, [count]);\n\n    return (\n        <Text style={styles.text}>{millisToMinutesAndSeconds(count)}</Text>\n    );\n};","export let initialScore = 0;\nexport let playedQuestions = 0;\n\nexport default function setScore(score, evalAnswer) {\n    \n    if(evalAnswer === 'right'){\n        initialScore = score + 1;\n        return initialScore;\n    } else if(evalAnswer === 'wrong'){\n        return initialScore;\n    } else {\n        return initialScore;\n    }\n};\n\nexport function increasePlayed() {\n    playedQuestions = playedQuestions + 1;\n}\n\nexport function resetScore() {\n    initialScore = 0;\n    playedQuestions = 0;\n}","import * as React from \"react\";\nimport { Text, View,TouchableOpacity } from \"react-native\";\nimport QuestionOption from \"./QuestionOption\";\nimport Timer from \"./Timer\";\nimport Questions from \"../Questions.json\";\nimport { useFonts } from \"expo-font\";\nimport styles from \"../assets/styles/Styles\";\nimport sendTdData from \"../functions/_sendTdData\";\nimport { increasePlayed } from \"../functions/_score\";\n\nexport default function QuizPage({ route, navigation }) {\n  const { index, timerCount, initialBtnState, phase, initialActiveState } = route.params;\n\n  const [buttonAEnabled, setButtonAEnabled] = React.useState(initialBtnState);\n  const [buttonBEnabled, setButtonBEnabled] = React.useState(initialBtnState);\n  const [buttonCEnabled, setButtonCEnabled] = React.useState(initialBtnState);\n  const [buttonDEnabled, setButtonDEnabled] = React.useState(initialBtnState);\n  const [buttonAActive, setButtonAActive] = React.useState(initialActiveState);\n  const [buttonBActive, setButtonBActive] = React.useState(initialActiveState);\n  const [buttonCActive, setButtonCActive] = React.useState(initialActiveState);\n  const [buttonDActive, setButtonDActive] = React.useState(initialActiveState);\n  const [answerSelectet, setAnswerSelected] = React.useState('');\n  const [timerInterrupt, setTimerInterrupt] = React.useState(false);\n\n  const selecting = (value) => {\n    if (value == 'a') {\n      setButtonAEnabled(true);\n      setButtonBEnabled(true);\n      setButtonCEnabled(true);\n      setButtonDEnabled(true);\n      setAnswerSelected('a');\n      setButtonBActive(false);\n      setButtonCActive(false);\n      setButtonDActive(false);\n    }\n    else if (value == 'b') {\n      setButtonAEnabled(true);\n      setButtonBEnabled(true);\n      setButtonCEnabled(true);\n      setButtonDEnabled(true);\n      setAnswerSelected('b');\n      setButtonAActive(false);\n      setButtonCActive(false);\n      setButtonDActive(false);\n    }\n    else if (value == 'c') {\n      setButtonAEnabled(true);\n      setButtonBEnabled(true);\n      setButtonCEnabled(true);\n      setButtonDEnabled(true);\n      setAnswerSelected('c');\n      setButtonAActive(false);\n      setButtonBActive(false);\n      setButtonDActive(false);\n    }\n    else if (value == 'd') {\n      setButtonAEnabled(true);\n      setButtonBEnabled(true);\n      setButtonCEnabled(true);\n      setButtonDEnabled(true);\n      setAnswerSelected('d');\n      setButtonAActive(false);\n      setButtonBActive(false);\n      setButtonCActive(false);\n    };\n  }\n\n  const interruptButton = () => {\n    setTimerInterrupt(true);\n  }\n\n  const [loaded] = useFonts({\n    Roboto: require('../assets/fonts/Roboto/Roboto-Regular.ttf'),\n    ZenLoop: require('../assets/fonts/Zen_Loop/ZenLoop-Regular.ttf'),\n  });\n\n  if (!loaded) {\n    return null;\n  }\n\n  const pushToArray = (myArray) => {\n    for (const [key, value] of Object.entries(Questions.Fragen[index].Antworten)) {\n      myArray.push(key);\n    }\n  }\n\n  let answerButtons = [];\n\n  pushToArray(answerButtons);\n\n  return (\n    <View style={styles.containerBackground}>\n      <View style={styles.container}>\n        <Timer\n          timeLeft={timerCount}\n          selectedAnswer={answerSelectet}\n          qPhase={phase}\n          qIndex={index+1}\n          interrupt={timerInterrupt}\n        />\n        <Text style={[styles.text, styles.textCenter]}>{Questions.Fragen[index].Frage}</Text>\n        {answerButtons.map((item, itemIndex) => (\n          <QuestionOption\n            key={itemIndex}\n            value={item}\n            btnNum={itemIndex}\n            questionIndex={itemIndex + 1}\n            navigation={navigation}\n            selected={\n              item == 'a' ? buttonAEnabled\n                : item == 'b' ? buttonBEnabled\n                  : item == 'c' ? buttonCEnabled\n                    : buttonDEnabled\n            }\n            isActive={\n              item == 'a' ? buttonAActive\n                : item == 'b' ? buttonBActive\n                  : item == 'c' ? buttonCActive\n                    : buttonDActive\n            }\n            onPress={() => {selecting(item); sendTdData(index, item); increasePlayed();}}\n          />\n        ))}\n         <TouchableOpacity style={styles.buttonBeenden} onPress={() => {navigation.navigate('Score'); interruptButton();}}>\n            <Text style={styles.buttonText}>Beenden</Text>\n          </TouchableOpacity>\n      </View>\n    </View>\n  );\n}","export default function sendTdData(question, answer) {\n    fetch('https://d7a0-141-22-50-46.eu.ngrok.io/api/v1.0/answers_' + String(question + 1) + '_' + String(answer), {\n      method: 'GET',\n    })\n    .then(response => response)\n    .catch((error) => {\n      console.error('Error', error);\n    });\n};","import * as React from \"react\";\nimport { Text, View, TouchableOpacity } from \"react-native\";\nimport Questions from \"../Questions.json\";\nimport { useFonts } from \"expo-font\";\nimport styles from \"../assets/styles/Styles\";\nimport { initialScore } from \"../functions/_score\";\nimport setScore from \"../functions/_score\";\nimport Timer from \"./Timer\";\n\nexport default function InfoPage({ navigation, route }) {\n\n    const [timerInterrupt, setTimerInterrupt] = React.useState(false);\n  \n    const interruptButton = () => {\n      setTimerInterrupt(true);\n    }\n\n    const [loaded] = useFonts({\n      Roboto: require('../assets/fonts/Roboto/Roboto-Regular.ttf'),\n      ZenLoop: require('../assets/fonts/Zen_Loop/ZenLoop-Regular.ttf'),\n    });\n      \n    if (!loaded) {\n      return null;\n    }\n\n    const {index, answer, timerCount, phase} = route.params;\n    const rightAnswer = Questions.Fragen[index].Antworttext;\n\n    const evalAnswer = (answer) => {\n      let answerState = \"\";\n      if(answer === Questions.Fragen[index].Richtige_antwort) {\n        answerState = 'right';\n        setScore(initialScore, answerState);\n        return (\n          <View style={styles.text}>\n            <Text style={styles.titleText}>Richtige Antwort</Text>\n          </View>\n        );\n      } else if (answer === '') {\n        answerState = 'wrong';\n        setScore(initialScore, answerState);\n        return (\n            <View style={styles.text}>\n              <Text style={styles.titleText}>Keine Antwort abgegeben</Text>\n            </View>\n          );\n      } else {\n        answerState = 'wrong';\n        setScore(initialScore, answerState);\n        return (\n            <View style={styles.text}>\n              <Text style={styles.titleText}>Falsche Antwort</Text>\n            </View>\n          );\n      }\n    }\n\n    return (\n      <View style={styles.containerBackground}>\n        <View style={styles.container}>\n          <View style={styles.text}>\n            <Timer\n              timeLeft={timerCount}\n              selectedAnswer={''}\n              qPhase={phase}\n              qIndex={index+1}\n              interrupt={timerInterrupt}\n            />\n          </View>\n          {evalAnswer(answer)}\n          <View style={styles.text}> \n            <Text style={styles.text}>\n              {rightAnswer}\n            </Text>\n          </View>\n          <TouchableOpacity style={styles.buttonBeenden} onPress={() => {navigation.navigate('Score'); interruptButton();}}>\n            <Text style={styles.buttonText}>Beenden</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n}","import * as React from \"react\";\nimport { Text, View, ScrollView } from \"react-native\";\nimport Questions from \"../Questions.json\";\nimport { useFonts } from \"expo-font\";\nimport styles from \"../assets/styles/Styles\";\nimport { Component } from 'react';\nimport { Modal, TouchableHighlight, StyleSheet} from 'react-native'\n\n\nexport default class TextPage extends Component {\n   \n  state = {\n      modalVisible: false,\n      modal1Visible: false,\n      modal2Visible: false,\n      modal3Visible: false,\n      modal4Visible: false,\n   }\n   toggleModal(visible) {\n    this.setState({ modalVisible: visible });\n   }\n   toggle1Modal(visible) {\n    this.setState({ modal1Visible: visible });\n   }\n   toggle2Modal(visible) {\n    this.setState({ modal2Visible: visible });\n   }\n   toggle3Modal(visible) {\n    this.setState({ modal3Visible: visible });\n   }\n   toggle4Modal(visible) {\n    this.setState({ modal4Visible: visible });\n   }\n   \n   render() {\n      return (\n        \n        <View style={styles.containerBackground}>\n         <View style = {styles.container}>\n          <Text style={styles.titleText}>Weiterführende Informationen</Text>\n\n\n\n          <TouchableHighlight onPress = {() => {this.toggleModal(true)}}>\n            <Text style={[styles.text, styles.textCenter]} numberOfLines={3}>{Questions.Fragen[0].Zusatztext}</Text>\n          </TouchableHighlight>\n\n          <Modal animationType = {\"fade\"} transparent = {false} propagateSwipe = {true}\n               \n               visible = {this.state.modalVisible}\n               onRequestClose = {() => { console.log(\"Modal has been closed.\") } }>\n               \n               <ScrollView> \n                <View style = {styles.modal}>\n                    <Text style={[styles.text, styles.textCenter]} >{Questions.Fragen[0].Zusatztext}</Text>\n                    <TouchableHighlight style={styles.buttonBeenden} onPress = {() => {\n                      this.toggleModal(!this.state.modalVisible)}}>\n                      <Text style = {styles.buttonText}>Schließen</Text>\n                    </TouchableHighlight>\n                </View>\n               </ScrollView> \n            </Modal>\n\n\n\n          <TouchableHighlight onPress = {() => {this.toggle1Modal(true)}}>\n            <Text style={[styles.text, styles.textCenter]} numberOfLines={3}>{Questions.Fragen[1].Zusatztext}</Text>\n          </TouchableHighlight>\n\n          <Modal animationType = {\"fade\"} transparent = {false} propagateSwipe = {true}\n               visible = {this.state.modal1Visible}\n               onRequestClose = {() => { console.log(\"Modal has been closed.\") } }>\n               \n               <ScrollView> \n                <View style = {styles.modal}>\n                <Text style={[styles.text, styles.textCenter]} >{Questions.Fragen[1].Zusatztext}</Text>\n                    <TouchableHighlight style={styles.buttonBeenden} onPress = {() => {\n                      this.toggle1Modal(!this.state.modal1Visible)}}>\n                      <Text style = {styles.buttonText}>Schließen</Text>\n                    </TouchableHighlight>\n                </View>\n               </ScrollView> \n            </Modal>\n\n\n\n          <TouchableHighlight onPress = {() => {this.toggle2Modal(true)}}>\n            <Text style={[styles.text, styles.textCenter]} numberOfLines={3}>{Questions.Fragen[2].Zusatztext}</Text>\n          </TouchableHighlight>\n\n          <Modal animationType = {\"fade\"} transparent = {false} propagateSwipe = {true}\n               visible = {this.state.modal2Visible}\n               onRequestClose = {() => { console.log(\"Modal has been closed.\") } }>\n               \n               <ScrollView> \n                <View style = {styles.modal}>\n                <Text style={[styles.text, styles.textCenter]}>{Questions.Fragen[2].Zusatztext}</Text>\n                    <TouchableHighlight style={styles.buttonBeenden} onPress = {() => {\n                      this.toggle2Modal(!this.state.modal2Visible)}}>\n                      <Text style = {styles.buttonText}>Schließen</Text>\n                    </TouchableHighlight>\n                </View>\n               </ScrollView> \n            </Modal>\n          \n          \n\n          <TouchableHighlight onPress = {() => {this.toggle3Modal(true)}}>\n            <Text style={[styles.text, styles.textCenter]} numberOfLines={3}>{Questions.Fragen[3].Zusatztext}</Text>\n          </TouchableHighlight>\n\n          <Modal animationType = {\"fade\"} transparent = {false} propagateSwipe = {true}\n               visible = {this.state.modal3Visible}\n               onRequestClose = {() => { console.log(\"Modal has been closed.\") } }>\n               \n               <ScrollView> \n                <View style = {styles.modal}>\n                <Text style={[styles.text, styles.textCenter]}>{Questions.Fragen[3].Zusatztext}</Text>\n                    <TouchableHighlight style={styles.buttonBeenden} onPress = {() => {\n                      this.toggle3Modal(!this.state.modal3Visible)}}>\n                      <Text style = {styles.buttonText}>Schließen</Text>\n                    </TouchableHighlight>\n                </View>\n               </ScrollView> \n            </Modal>\n        \n\n\n          <TouchableHighlight onPress = {() => {this.toggle4Modal(true)}}>\n            <Text style={[styles.text, styles.textCenter]} numberOfLines={3}>{Questions.Fragen[4].Zusatztext}</Text> \n          </TouchableHighlight>\n\n          <Modal animationType = {\"fade\"} transparent = {false} propagateSwipe = {true}\n               visible = {this.state.modal4Visible}\n               onRequestClose = {() => { console.log(\"Modal has been closed.\") } }>\n               \n               <ScrollView> \n                <View style = {styles.modal}>\n                <Text style={[styles.text, styles.textCenter]}>{Questions.Fragen[4].Zusatztext}</Text> \n                    <TouchableHighlight style={styles.buttonBeenden} onPress = {() => {\n                      this.toggle4Modal(!this.state.modal4Visible)}}>\n                      <Text style = {styles.buttonText}>Schließen</Text>\n                    </TouchableHighlight>\n                </View>\n               </ScrollView> \n            </Modal>\n         </View>\n         </View>\n      )\n   }\n}\n","import * as React from \"react\";\nimport { Text, View, TouchableOpacity } from \"react-native\";\nimport { useFonts } from \"expo-font\";\nimport styles from \"../assets/styles/Styles\";\nimport * as ScoreHandler from \"../functions/_score\";\n\nexport default function ScorePage({ navigation }) {\n    const [loaded] = useFonts({\n      Roboto: require('../assets/fonts/Roboto/Roboto-Regular.ttf'),\n      ZenLoop: require('../assets/fonts/Zen_Loop/ZenLoop-Regular.ttf'),\n    });\n      \n    if (!loaded) {\n      return null;\n    }\n\n    return (\n      <View style={styles.containerBackground}>\n        <View style={styles.container}>\n          <Text style={styles.titleText}>SCORE</Text>\n          <View style={styles.textContainer}>\n            <Text style={styles.text}>\n              Du hast {ScoreHandler.playedQuestions} Fragen gespielt und davon\n              {\"\\n\"} {ScoreHandler.initialScore} richtig beantwortet.\n            </Text>\n          </View>\n          <TouchableOpacity style={styles.buttonBeenden} onPress={() =>  {navigation.navigate('Home'); ScoreHandler.resetScore();}}>\n            <Text style={styles.buttonText}>Home</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n}","import { NavigationContainer, StackActions } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LandingPage from './components/LandingPage';\nimport QuizPage from './components/QuizPage';\nimport InfoPage from './components/InfoPage';\nimport TextPage from './components/TextPage';\nimport ScorePage from './components/ScorePage';\nimport { navigationRef } from './components/RootNavigation';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer ref={navigationRef}>\n      <Stack.Navigator\n        screenOptions={{\n          headerShadowVisible: false,\n          headerBackTitleVisible: false,\n        }}\n      >\n        <Stack.Screen\n          name='Home'\n          component={LandingPage}\n          options={{headerShown: false}}\n        />\n        <Stack.Screen\n          name='Quiz'\n          component={QuizPage}\n          options={{headerShown: false}}\n          initialParams={{index: 0, timerCount: 0, initialBtnState: false, phase: 0, initialActiveState: true}}\n        />\n        <Stack.Screen\n          name='Infos'\n          component={InfoPage}\n          options={{headerShown: false}}\n          initialParams={{index: 0, answer: '', timerCount: 0, phase: 0}}\n        />  \n        <Stack.Screen\n          name='Score'\n          component={ScorePage}\n          options={{headerShown: false}}\n        />\n        <Stack.Screen\n          name='Weiterführende Informationen'\n          component={TextPage}\n          options={{\n            headerStyle: {\n              backgroundColor: '#F2F2F2'\n            },\n            headerTintColor: '#00517A'\n          }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Regular.ttf\";","module.exports = \"data:font/ttf;base64,\""],"sourceRoot":""}